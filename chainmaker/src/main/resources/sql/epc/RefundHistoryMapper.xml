<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.chainmaker.epc.dao.RefundHistoryDao" >

	<!-- 반품 목록 조회  -->
	<select id="selectRefundHistory" resultType="kr.happyjob.chainmaker.epc.model.RefundHistoryVO">
		SELECT  r.refund_no
		,  r.order_no
		,  p.pro_name
		,  count(*) as count
		,  r.refund_date
		,  r.refund_note
		,  r.refund_confirm_cd
		,  o.loginID 
	FROM tb_refund as r
 	JOIN (SELECT order_no
			,	 pro_no
			,	 loginID
			FROM tb_order) as o
	JOIN(SELECT pro_no
			,    pro_name 
			FROM tb_product) as p
	   ON r.order_no = o.order_no
	  AND r.pro_no = o.pro_no
	  AND r.pro_no = p.pro_no
	WHERE r.order_no IS NOT NULL
	AND o.loginID = #{loginID}
	GROUP BY r.refund_no, r.refund_date
	ORDER BY r.refund_no DESC, r.refund_date DESC
	LIMIT #{pageIndex}, #{pageSize}
	</select>
	
	<!-- 반품 목록 카운트 -->
	<select id="totalRefundHistory" resultType="int"> 
	SELECT count(a) FROM 
	(SELECT r.refund_no, r.pro_no, o.loginID, count(refund_no) AS a 
 	 FROM tb_refund AS r 
 	 JOIN tb_order AS o 
 	 ON r.order_no = o.order_no 
 	 AND r.pro_no = o.pro_no
 	 WHERE r.order_no IS NOT NULL
 	 AND o.loginID = #{loginID}
 	 GROUP BY refund_no, refund_date) as b
	</select>
</mapper>