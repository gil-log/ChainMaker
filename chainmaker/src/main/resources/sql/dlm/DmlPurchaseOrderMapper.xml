<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao">
  
  <!-- 창고 담당자별 납품업체 발주 리스트 목록 -->
  <select id="purchaseOrderListByMng" resultType="kr.happyjob.chainmaker.dlm.model.DlmPurchaseOrderVO">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.purchaseOrderListByMng */
    SELECT deli.deli_no,
           deli.deli_company, 
           FORMAT(SUM(proio.pro_io_qty * prod.pro_deli_price),'##,##0') 'total_price'
           
      FROM tb_purchase as purc 
      JOIN tb_product as prod 
        ON purc.pro_no = prod.pro_no
      JOIN tb_delivery as deli 
        ON prod.deli_no = deli.deli_no 
      JOIN tb_warehouse as ware 
        ON purc.ware_no = ware.ware_no
      JOIN tb_userinfo as ui
        ON ware.loginID = ui.loginID
      JOIN tb_product_io_warehouse as proio
        ON (purc.purchase_no = proio.purchase_no AND purc.ware_no = proio.ware_no)
        
    <where>
      <if test="(searchKey != null) and (!searchKey.equals(''))">
        <choose>
          <when test="(searchKey != null) and (searchKey eq 'company'.toString())"> 
            deli.deli_company LIKE CONCAT('%', #{searchWord}, '%')
          </when>
          <when test="(searchKey != null) and (searchKey eq 'all'.toString())">
            (deli.deli_company LIKE CONCAT('%', #{searchWord}, '%') OR deli.deli_no LIKE CONCAT('%',#{searchWord}, '%'))
          </when>
        </choose>
      </if>
      <if test="(startDate != null) and (!startDate.equals('')) and (endDate != null) and (!endDate.equals(''))">
        AND DATE_FORMAT(purc.purchase_date, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
      </if>
      AND ui.del_cd = 'n'
      AND ui.approval_cd = 'y'
      AND (purc.purchase_cd = '2' OR purc.purchase_cd = '5')
      AND proio.pro_io_cd = 'in_pre'
      AND proio.pro_io_qty > 0 
      AND ware.loginID = #{loginID}
    </where>
    GROUP BY deli.deli_company
    LIMIT  #{pageIndex}, #{pageSize}
  </select>
  
  <!-- 업체별 발주 리스트 조회 목록 수 -->
  <select id="purchaseOrderListTotal" resultType="int"> 
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.purchaseOrderListTotal */
  SELECT COUNT(DISTINCT deli_company) as totalcnt
   
    FROM tb_purchase as purc
    JOIN tb_product as prod 
      ON purc.pro_no = prod.pro_no 
    JOIN tb_delivery as deli 
      ON prod.deli_no = deli.deli_no 
    JOIN tb_warehouse as ware 
      ON purc.ware_no = ware.ware_no 
    JOIN tb_userinfo as ui
      ON ware.loginID = ui.loginID
    JOIN tb_product_io_warehouse as proio
      ON (purc.purchase_no = proio.purchase_no AND purc.ware_no = proio.ware_no)
      
   WHERE ui.del_cd = 'n' 
     AND ui.approval_cd = 'y'
     AND (purc.purchase_cd = '2' OR purc.purchase_cd = '5')
     AND proio.pro_io_cd = 'in_pre'
     AND proio.pro_io_qty > 0
     AND ware.loginID = #{loginID}
     <if test="(startDate != null) and (!startDate.equals('')) and (endDate != null) and (!endDate.equals(''))">
        AND DATE_FORMAT(purc.purchase_date, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
      </if>
  </select>
  
  <!-- 업체별 발주 상세 목록 -->
  <select id="purchaseOrderDtlListByCompany" resultType="kr.happyjob.chainmaker.dlm.model.DlmPurchaseOrderVO">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.purchaseOrderDtlListByCompany */
    SELECT purc.purchase_no, 
           prod.pro_no, 
           dtl.detail_name, 
           prod.pro_name, 
           prod.pro_manu_name, 
           purc.purchase_date, 
           proio.pro_io_qty,
           FORMAT(prod.pro_deli_price,'##,##0') 'pro_deli_price',
           ware.ware_no,
           deli.deli_no
           
      FROM tb_purchase as purc 
      JOIN tb_product as prod 
        ON purc.pro_no = prod.pro_no
      JOIN tb_delivery as deli 
        ON prod.deli_no = deli.deli_no 
      JOIN tb_warehouse as ware 
        ON purc.ware_no = ware.ware_no
      JOIN tb_userinfo as ui
        ON ware.loginID = ui.loginID
      JOIN tb_detail_code as dtl
        ON prod.pro_cd = dtl.detail_code
      JOIN tb_product_io_warehouse as proio
        ON (purc.purchase_no = proio.purchase_no AND purc.ware_no = proio.ware_no)
    
     WHERE ui.del_cd = 'n'
       AND ui.approval_cd = 'y'
       AND (purc.purchase_cd = '2' OR purc.purchase_cd = '5')
       AND proio.pro_io_cd = 'in_pre'
       AND proio.pro_io_qty > 0
       AND ware.loginID = #{loginID}
       AND deli.deli_no = #{deli_no}
       <if test="(startDate != null) and (!startDate.equals('')) and (endDate != null) and (!endDate.equals(''))">
        AND DATE_FORMAT(purc.purchase_date, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
       </if>
  ORDER BY purc.purchase_no
     LIMIT #{pageIndex}, #{pageSize}
  </select>
  
  <!-- 업체별 발주 리스트 조회 목록 수 -->
  <select id="purchaseOrderDtlListTotal" resultType="int"> 
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.purchaseOrderDtlListTotal */
  SELECT COUNT(*) as totalcnt
   
    FROM tb_purchase as purc 
    JOIN tb_product as prod 
      ON purc.pro_no = prod.pro_no
    JOIN tb_delivery as deli 
      ON prod.deli_no = deli.deli_no 
    JOIN tb_warehouse as ware 
      ON purc.ware_no = ware.ware_no
    JOIN tb_userinfo as ui
      ON ware.loginID = ui.loginID
    JOIN tb_detail_code as dtl
      ON prod.pro_cd = dtl.detail_code
    JOIN tb_product_io_warehouse as proio
      ON (purc.purchase_no = proio.purchase_no AND purc.ware_no = proio.ware_no)
      
   WHERE ui.del_cd = 'n' 
     AND ui.approval_cd = 'y'
     AND (purc.purchase_cd = '2' or purc.purchase_cd = '5')
     AND proio.pro_io_cd = 'in_pre'
     AND proio.pro_io_qty > 0
     AND ware.loginID = #{loginID}
     AND deli.deli_no = #{deli_no}
     <if test="(startDate != null) and (!startDate.equals('')) and (endDate != null) and (!endDate.equals(''))">
        AND DATE_FORMAT(purc.purchase_date, '%Y-%m-%d') BETWEEN #{startDate} AND #{endDate}
     </if>
  </select>
  
  <!-- 반품 정보 생성 -->
  <insert id="insertRefundInfoRequest" useGeneratedKeys="true" keyProperty="refund_no" 
  parameterType="kr.happyjob.chainmaker.dlm.model.DlmPurchaseAndRefundInfoDTO">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.insertRefundInfoRequest */
  INSERT INTO tb_refund
  (
  purchase_no,
  ware_no,
  pro_no,
  refund_qty,
  refund_cd,
  refund_confirm_cd,
  refund_note
  )
  VALUES
  (
  #{purchase_no},
  #{ware_no},
  #{pro_no},
  #{pro_io_qty},
  '0',
  '0',
  "불량"
  )
  </insert>
  <insert id="insertRefundInfoRequestList" parameterType="java.util.Map">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.insertRefundInfoRequestList */
   INSERT INTO tb_refund
  (
  refund_no,
  purchase_no,
  ware_no,
  pro_no,
  refund_qty,
  refund_cd,
  refund_confirm_cd,
  refund_note
  )
  VALUES
    <foreach collection="orderByPurchaseNoDTOList" item="list" separator=",">
    (
    #{list.refund_no},
    #{list.purchase_no},
    #{list.ware_no},
    #{list.pro_no},
    #{list.pro_io_qty},
    '0',
    '0',
    "불량"
    )
    </foreach>
  </insert>
  
  <!-- 반품 지시서 생성 -->
  <insert id="insertDirectionInfo" parameterType="kr.happyjob.chainmaker.dlm.model.DlmPurchaseAndRefundInfoDTO">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.insertDirectionInfo */
  INSERT INTO tb_direction
  (
  refund_no,
  purchase_no,
  ware_no,
  pro_no,
  direction_out_qty,
  direction_manager,
  direction_cd,
  direction_note
  )
  VALUES
  (
  #{refund_no},
  #{purchase_no},
  #{ware_no},
  #{pro_no},
  #{pro_io_qty},
  #{loginID},
  'refund',
  "불량으로 인한 발주제품 반품"
  )
  </insert>
  <insert id="insertDirectionInfoList" parameterType="java.util.Map">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.insertDirectionInfoList */
  INSERT INTO tb_direction 
  (
  refund_no,
  purchase_no,
  ware_no,
  pro_no,
  direction_out_qty,
  direction_manager,
  direction_cd,
  direction_note
  )
  VALUES
  <foreach collection="orderByPurchaseNoDTOList" item="list" separator=",">
  (
  #{list.refund_no},
  #{list.purchase_no},
  #{list.ware_no},
  #{list.pro_no},
  #{list.pro_io_qty},
  #{list.loginID},
  'refund',
  "불량으로 인한 발주제품 반품"
  )
  </foreach>
  </insert>
  
  <!-- 반품으로 인한 발주 수량 감소 -->
  <update id="updateProIoWhQty" parameterType="java.util.Map">
    /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.updateProIoWhQty */
    <foreach collection="orderByPurchaseNoDTOList" item="list" separator=";">
    UPDATE tb_product_io_warehouse as A
       SET pro_io_qty = pro_io_qty - #{list.pro_io_qty},
           refund_no = #{list.refund_no},
           pro_io_cd =
            IF ( 
                ((SELECT pro_io_qty FROM(SELECT pro_io_qty FROM tb_product_io_warehouse B WHERE B.purchase_no = #{list.purchase_no} AND B.ware_no = #{list.ware_no} AND B.pro_no = #{list.pro_no})CC) - #{list.pro_io_qty}) = 0,
                'in_done',
                'in_pre'
                   ),
           pro_io_memo = 
            IF (
                ((SELECT pro_io_qty FROM(SELECT pro_io_qty FROM tb_product_io_warehouse C WHERE C.purchase_no = #{list.purchase_no} AND C.ware_no = #{list.ware_no} AND C.pro_no = #{list.pro_no})CC) - #{list.pro_io_qty}) = 0,
                    '불량으로 인한 반품',
                    '불량으로 인한 부분 반품'
                   )
     WHERE A.purchase_no = #{list.purchase_no}
       AND A.ware_no = #{list.ware_no}
       AND A.pro_no = #{list.pro_no}
    </foreach>
  </update>
  
  <!--  (SELECT pro_io_qty - #{list.pro_io_qty} FROM tb_product_io_warehouse as B WHERE B.purchase_no = #{list.purchase_no} AND B.ware_no = #{list.ware_no} AND B.pro_no = #{list.pro_no}) = 0 -->
  
  <!-- 반품으로 인한 purchase_cd 변경 -->
  <update id="updatePurchaseCD" parameterType="java.util.Map">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.updatePurchaseCD */
    <foreach collection="orderByPurchaseNoDTOList" item="list" separator=";">
  UPDATE tb_purchase
     SET purchase_cd = 
         CASE (purchase_cd)
          WHEN '2' THEN IF(purchase_qty = #{list.pro_io_qty},'4','5')          
          WHEN '5' THEN IF((SELECT pro_io_qty FROM tb_product_io_warehouse WHERE purchase_no = #{list.purchase_no} AND pro_no = #{list.pro_no} AND ware_no = #{list.ware_no}) = 0,'4','5')     
          ELSE '7' 
         END
   WHERE purchase_no = #{list.purchase_no}
     AND pro_no = #{list.pro_no}
     AND ware_no = #{list.ware_no}
     </foreach>
  </update>
  
  <!-- 입고로 인한 product_io_warehouse 코드 변경 -->
  <update id="updateWarehousing" parameterType="java.util.Map">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.updateWarehousing */
    <foreach collection="orderByPurchaseNoDTOList" item="list" separator=";">
      UPDATE tb_product_io_warehouse
         SET pro_io_cd = 'in_done',
             pro_io_memo = 
              CASE (SELECT purchase_cd FROM tb_purchase WHERE purchase_no = #{list.purchase_no} AND pro_no = #{list.pro_no} AND ware_no = #{list.ware_no})
                WHEN '2' THEN '입고 처리 완료'
                WHEN '5' THEN '반품 후 나머지 수량 입고 처리 완료'
                ELSE '조건이 무시 됨.' 
              END
       WHERE purchase_no = #{list.purchase_no}
         AND ware_no = #{list.ware_no}
         AND pro_no = #{list.pro_no}
    </foreach>
  </update>
  
  <!-- 입고 처리로 인한 purchase테이블 코드 변경 -->
  <update id="updatePurchaseComplete" parameterType="java.util.Map">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.updatePurchaseComplete */
    <foreach collection="orderByPurchaseNoDTOList" item="list" separator=";">
    UPDATE tb_purchase 
       SET purchase_cd =
           CASE (purchase_cd)
            WHEN '2' THEN '3'
            WHEN '5' THEN '6'
            ELSE '7' 
           END
     WHERE purchase_no = #{list.purchase_no}
       AND ware_no = #{list.ware_no}
     </foreach>
  </update>
  
  <!-- 입고로 인한 실 재고 처리 -->
  <update id="updateRealQuantity" parameterType="java.util.Map">
  /** kr.happyjob.chainmaker.dlm.dao.DlmPurchaseOrderDao.updateRealQuantity */
    <foreach collection="orderByPurchaseNoDTOList" item="list" separator=";">
      UPDATE tb_product_warehouse
         SET pro_ware_qty = pro_ware_qty + #{list.pro_io_qty}
       WHERE ware_no = #{list.ware_no}
         AND pro_no = #{list.pro_no}
    </foreach>
  </update>
  
  
</mapper>