<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.chainmaker.pcm.dao.PurchaseOrderDao">

	<!-- 구매담당자_발주 지시서 목록 조회 -->
	<select id="purchaseOrderList" resultType="kr.happyjob.chainmaker.pcm.model.PurchaseOrderModel">
		SELECT tb_purchase.purchase_no,			     
			   tb_purchase.purchase_date,
			   tb_purchase.purchase_cd,
			   tb_delivery.deli_company,
			   tb_delivery.deli_name,
			   tb_delivery.deli_email,
			   tb_delivery.deli_phone,			   
			   tb_purchase.purchase_qty,
			   tb_purchase.purchase_qty*tb_product.pro_deli_price sum_price,
			   SUM(tb_purchase.purchase_qty*tb_product.pro_deli_price) total_price,
			   tb_product.pro_no,
			   tb_product.pro_name,
			   tb_product.pro_cd,
		       tb_product.pro_deli_price,
		       tb_warehouse.ware_no,
		       tb_warehouse.ware_name,
		       tb_warehouse.ware_address,
		       tb_warehouse.ware_dt_address,
			   tb_direction.direction_cd
		  FROM tb_purchase   
		  
		  LEFT JOIN tb_direction 
			ON tb_direction.purchase_no=tb_purchase.purchase_no	
			
		  LEFT JOIN tb_product 
			ON tb_purchase.pro_no=tb_product.pro_no
				
		  LEFT JOIN tb_delivery 
			ON tb_product.deli_no=tb_delivery.deli_no
				
		  LEFT JOIN tb_warehouse 
			ON tb_purchase.ware_no=tb_warehouse.ware_no  
		<where>  
		   AND tb_direction.direction_cd='purchase'	
		   <if test="(checkBoxStatus != null) and (checkBoxStatus.equals('checked'))">
		   		AND tb_purchase.purchase_cd IN ('0', '1')
		   </if>		 
		 <if test="(searchKey != null) and (!searchKey.equals(''))">
		  		<choose>
		  			<when test="(searchKey != null) and (searchKey eq 'deli_company'.toString())">
		  				AND tb_delivery.deli_company LIKE CONCAT('%', #{searchWord}, '%')	
		  				<if test="(!startDate.equals('')) or (!endDate.equals(''))">
		  					<![CDATA[
		  						AND tb_purchase.purchase_date >= DATE(#{startDate}) 
		  						AND tb_purchase.purchase_date < DATE(#{endDate})+1
		  					]]>						  					
		  				</if>	  				
		  			</when>
		  			<when test="(searchKey != null) and (searchKey eq 'pro_name'.toString())">
		  				AND tb_product.pro_name LIKE CONCAT('%', #{searchWord}, '%')
		  				<if test="(!startDate.equals('')) or (!endDate.equals(''))">
		  					<![CDATA[
		  						AND tb_purchase.purchase_date >= DATE(#{startDate}) 
		  						AND tb_purchase.purchase_date < DATE(#{endDate})+1
		  					]]>	  								  					
		  				</if>
		  			</when>
		  		</choose>
		  	</if>
		  </where>
		 GROUP BY tb_purchase.purchase_no
		 ORDER BY tb_purchase.purchase_no DESC
		 LIMIT #{pageIndex}, #{pageSize}		  
	</select>
	
	<!-- 구매담당자_발주 지시서 조회 목록 카운트 -->
	<select id="countPurchaseOrderList" resultType="int">
		SELECT COUNT(*)
		  FROM (SELECT tb_purchase.purchase_no,			     
					   tb_purchase.purchase_date,
					   tb_purchase.purchase_cd,
					   tb_delivery.deli_company,
					   tb_delivery.deli_name,
					   tb_delivery.deli_email,
					   tb_delivery.deli_phone,
					   tb_purchase.purchase_qty,
					   tb_purchase.purchase_qty*tb_product.pro_deli_price sum_price,
					   SUM(tb_purchase.purchase_qty*tb_product.pro_deli_price) total_price,
					   tb_product.pro_no,
					   tb_product.pro_name,
					   tb_product.pro_cd,
				       tb_product.pro_deli_price,
				       tb_warehouse.ware_no,
				       tb_warehouse.ware_name,
				       tb_warehouse.ware_address,
				       tb_warehouse.ware_dt_address,
					   tb_direction.direction_cd
				  FROM tb_purchase   
				  
				  LEFT JOIN tb_direction 
					ON tb_direction.purchase_no=tb_purchase.purchase_no
						
				  LEFT JOIN tb_product 
					ON tb_purchase.pro_no=tb_product.pro_no
						
				  LEFT JOIN tb_delivery 
					ON tb_product.deli_no=tb_delivery.deli_no	
					
				  LEFT JOIN tb_warehouse 
					ON tb_purchase.ware_no=tb_warehouse.ware_no  
				<where>  
				   AND tb_direction.direction_cd='purchase'
				   <if test="(checkBoxStatus != null) and (checkBoxStatus.equals('checked'))">
				   		AND tb_purchase.purchase_cd IN ('0', '1')
				   </if>	
				 <if test="(searchKey != null) and (!searchKey.equals(''))">
				  		<choose>
				  			<when test="(searchKey != null) and (searchKey eq 'deli_company'.toString())">
				  				AND tb_delivery.deli_company LIKE CONCAT('%', #{searchWord}, '%')	
				  				<if test="(!startDate.equals('')) or (!endDate.equals(''))">
				  					<![CDATA[
				  						AND tb_purchase.purchase_date >= DATE(#{startDate}) 
				  						AND tb_purchase.purchase_date < DATE(#{endDate})+1
				  					]]>						  					
				  				</if>	  				
				  			</when>
				  			<when test="(searchKey != null) and (searchKey eq 'pro_name'.toString())">
				  				AND tb_product.pro_name LIKE CONCAT('%', #{searchWord}, '%')
				  				<if test="(!startDate.equals('')) or (!endDate.equals(''))">
				  					<![CDATA[
				  						AND tb_purchase.purchase_date >= DATE(#{startDate}) 
				  						AND tb_purchase.purchase_date < DATE(#{endDate})+1
				  					]]>	  								  					
				  				</if>
				  			</when>
				  		</choose>
				  	</if>
				  </where>
					 GROUP BY tb_purchase.purchase_no
					 ORDER BY tb_purchase.purchase_no DESC) 
				tb_purchase
	</select>
	
	<select id="purchaseOrderSelect" resultType="kr.happyjob.chainmaker.pcm.model.PurchaseOrderModel">
		SELECT tb_purchase.purchase_no,			     
			   tb_purchase.purchase_date,
			   tb_purchase.purchase_cd,
			   tb_delivery.deli_company,
			   tb_delivery.deli_name,
			   tb_delivery.deli_email,
			   tb_delivery.deli_phone,
			   tb_purchase.purchase_qty,
			   tb_purchase.purchase_qty*tb_product.pro_deli_price sum_price,
			   SUM(tb_purchase.purchase_qty*tb_product.pro_deli_price) total_price,
			   tb_product.pro_no,
			   tb_product.pro_name,
			   tb_product.pro_cd,
		       tb_product.pro_deli_price,
		       tb_warehouse.ware_no,
		       tb_warehouse.ware_name,
		       tb_warehouse.ware_address,
		       tb_warehouse.ware_dt_address,
			   tb_direction.direction_cd
		  FROM tb_purchase   
		  
		  LEFT JOIN tb_direction 
			ON tb_direction.purchase_no=tb_purchase.purchase_no	
			
		  LEFT JOIN tb_product 
			ON tb_purchase.pro_no=tb_product.pro_no
				
		  LEFT JOIN tb_delivery 
			ON tb_product.deli_no=tb_delivery.deli_no	
			
		  LEFT JOIN tb_warehouse 
			ON tb_direction.ware_no=tb_warehouse.ware_no
				
		  LEFT JOIN tb_userinfo 
			ON tb_delivery.deli_id=tb_userinfo.loginID 
			      
		 WHERE tb_direction.direction_cd='purchase'
		   AND tb_purchase.purchase_no=#{purchase_no}
		   
		 GROUP BY tb_purchase.purchase_no, tb_warehouse.ware_no
		 ORDER BY tb_purchase.purchase_no DESC 
		 LIMIT 0, 1 
	</select>
	
	
	<!-- 구매담당자_발주 지시서 단건 상세 조회 -->
	<select id="purchaseDtlList" resultType="kr.happyjob.chainmaker.pcm.model.PurchaseOrderModel">
		SELECT tb_purchase.purchase_no,			     
			   tb_purchase.purchase_date,
			   tb_purchase.purchase_cd,
			   tb_delivery.deli_company,
			   tb_delivery.deli_name,
		       tb_delivery.deli_email,
		       tb_delivery.deli_phone,
			   tb_purchase.purchase_qty,
			   tb_purchase.purchase_qty*tb_product.pro_deli_price sum_price,
			   SUM(tb_purchase.purchase_qty*tb_product.pro_deli_price) total_price,
			   tb_product.pro_no,
			   tb_product.pro_name,
			   tb_product.pro_cd,
		       tb_product.pro_deli_price,
		       tb_warehouse.ware_no,
		       tb_warehouse.ware_name,
		       tb_warehouse.ware_address,
		       tb_warehouse.ware_dt_address,
			   tb_direction.direction_cd
		  FROM tb_purchase   
		  LEFT JOIN tb_direction 
			ON tb_direction.purchase_no=tb_purchase.purchase_no	
			
		  LEFT JOIN tb_product 
			ON tb_purchase.pro_no=tb_product.pro_no	
			
		  LEFT JOIN tb_delivery 
			ON tb_product.deli_no=tb_delivery.deli_no
				
		  LEFT JOIN tb_warehouse 
			ON tb_purchase.ware_no=tb_warehouse.ware_no  
			  
		 WHERE tb_direction.direction_cd='purchase'
		   AND tb_purchase.purchase_no=#{purchase_no}
		   
		 GROUP BY tb_purchase.purchase_no, tb_purchase.ware_no
		 ORDER BY tb_purchase.purchase_no DESC
	</select>
	
	<!-- 구매담당자_발주 지시서 단건 상세 조회 카운트-->
	<select id="countPurchaseDtlList" resultType="int">
		SELECT COUNT(*)
		  FROM (SELECT tb_purchase.purchase_no,			     
					   tb_purchase.purchase_date,
					   tb_purchase.purchase_cd,
					   tb_delivery.deli_company,
					   tb_delivery.deli_name,
					   tb_delivery.deli_email,
					   tb_delivery.deli_phone,
					   tb_purchase.purchase_qty,
					   tb_purchase.purchase_qty*tb_product.pro_deli_price sum_price,
					   SUM(tb_purchase.purchase_qty*tb_product.pro_deli_price) total_price,
					   tb_product.pro_no,
					   tb_product.pro_name,
					   tb_product.pro_cd,
				       tb_product.pro_deli_price,
				       tb_warehouse.ware_no,
				       tb_warehouse.ware_name,
				       tb_warehouse.ware_address,
				       tb_warehouse.ware_dt_address,
					   tb_direction.direction_cd
				  FROM tb_purchase   
				  LEFT JOIN tb_direction 
					ON tb_direction.purchase_no=tb_purchase.purchase_no	
					
				  LEFT JOIN tb_product 
					ON tb_purchase.pro_no=tb_product.pro_no
						
				  LEFT JOIN tb_delivery 
					ON tb_product.deli_no=tb_delivery.deli_no
						
				  LEFT JOIN tb_warehouse 
					ON tb_purchase.ware_no=tb_warehouse.ware_no 
					   
				 WHERE tb_direction.direction_cd='purchase'
				   AND tb_purchase.purchase_no=#{purchase_no}
				   
				 GROUP BY tb_purchase.purchase_no, tb_purchase.ware_no
				 ORDER BY tb_purchase.purchase_no DESC) 
			tb_purchase
	</select>
	
	<!-- 구매담당자_발주 지시서 전송 및 입금확인에 대한 purchase_cd 변경 -->
	<update id="updatePurchaseCD">
		UPDATE tb_purchase SET purchase_cd=2 WHERE purchase_no=#{purchase_no}
	</update>
</mapper>