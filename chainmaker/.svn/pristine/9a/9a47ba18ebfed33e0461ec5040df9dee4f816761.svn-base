<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.chainmaker.scm.dao.RefundInfoDao">

	<!-- 12페이지 반품 신청 목록 _ 혜원 -->

	<!-- 1. 반품 목록 전체 조회 -->    <!-- 검색 체크하기!!!!!!! -->
	<select id="selectRefundList" parameterType="Map"
		resultType="kr.happyjob.chainmaker.scm.model.RefundVO">
		SELECT @rownum:=@rownum+1 as row_num
		,r.refund_no as refund_no
		,r.refund_date as refund_date
		,r.pro_no as pro_no
		,p.pro_name as pro_name
		,r.refund_qty as refund_qty
		,p.pro_price as pro_price
		,p.pro_price * r.refund_qty as total_price
		,r.order_no as order_no
		,r.refund_note as refund_note
		,r.ware_no as ware_no
		FROM tb_refund r
		JOIN tb_product p
		on p.pro_no = r.pro_no
		<where>
		and (@rownum:=0)=0
		and r.order_no is not null
		and r.refund_confirm_cd = 0
		</where>
		order by r.refund_no desc
		limit #{pageIndex},#{pageSize}

	</select>


	<!-- 2. 반품 목록 갯수 -->
	<select id="countRefundList" parameterType="Map" resultType="int">
		select count(1) from tb_refund r
		<where>
		and order_no is not null
		and r.refund_confirm_cd = 0
		</where>
	</select>


	<!-- 작업지시서 모달창 띄우는것 / 창고검색은 매퍼 따로! -->
	<select id="selectRDocModal" parameterType="Map"
		resultType="kr.happyjob.chainmaker.scm.model.RefundVO">
		SELECT
		r.refund_no as refund_no
		,r.refund_date as refund_date
		,r.pro_no as pro_no
		,p.pro_name as pro_name
		,r.refund_qty as refund_qty
		,p.pro_price as pro_price
		,p.pro_price * r.refund_qty as total_price
		,r.order_no as order_no
		,r.refund_note as refund_note
		,r.ware_no as origin_ware_no
		FROM tb_refund r
		JOIN tb_product p
		on p.pro_no = r.pro_no
		<where> <!-- pk3개여서  -->
		and r.refund_no = #{refund_no}
		and r.pro_no = #{pro_no}
		and r.ware_no = #{ware_no}
		and r.order_no is not null
		</where>
	</select>
	
	
	
	<!--  창고검색은 매퍼 따로! -->
	<select id="selectWareInfo" parameterType="Map"
		resultType="kr.happyjob.chainmaker.scm.model.WarehouseVO">
	SELECT 
	w.ware_no
	,w.loginID
	,w.ware_zipcode
	,w.ware_dt_address
	,w.ware_address
	,w.ware_name
	,w.ware_cd
	,pwh.pro_no
	FROM tb_warehouse w
	JOIN tb_product_warehouse pwh
	on w.ware_no = pwh.ware_no
	where pwh.pro_no = #{pro_no}

	</select>
	
<!-- 임원승인 누르면 refund 테이블에 confirm_cd,ware_no - update /direction테이블에 ware_no update / tb_io warehouse에 insert -->
	<update id="updateRefundWareNo" parameterType="Map">
        update tb_refund  set
            ware_no = #{ware_no},
            refund_confirm_cd = 1            
        <where>
        	and pro_no = #{pro_no}
        	and refund_no = #{refund_no}
        	and ware_no = #{origin_ware_no}
        </where>
    </update>
 <!-- 임원승인 누르면 direction에 ware_no도 바껴야한다!  -->   
    <update id="updateDirectionRefundWareNo" parameterType="Map">
        update tb_direction set
            ware_no = #{ware_no}         
        <where>
        	and pro_no = #{pro_no}
        	and refund_no = #{refund_no}
        	and ware_no = #{origin_ware_no}
        </where>
    </update>
     <insert id = "insertProductIoWarehouse" parameterType="Map" >
	insert into tb_product_io_warehouse(
		order_no,
		refund_no,
		pro_no,
		ware_no,
		pro_io_memo,
		pro_io_cd,
		pro_io_qty
	)
		select
			order_no,
			refund_no,
			pro_no,
			ware_no,
			'기업고객 반품으로 인한 입고예정',
			'in_pre',
			refund_qty
	 	from tb_refund	 
	 <where>
	 		and pro_no = #{pro_no}
        	and refund_no = #{refund_no}
        	and ware_no = #{ware_no}
	 </where>
    
    </insert>
    
	<!-- <update id="updateRefundConfirmCd" parameterType="Map">
        update tb_refund r set
            refund_confirm_cd = 1
          
        <where>
        	and pro_no = #{pro_no}
        	and refund_no = #{refund_no}
        	and ware_no = #{ware_no}
        </where>
    </update> -->
	


	<!-- 3. 검색하면 나오는 반품목록 * if 조건 하나씩 추가해서 검색해보기. if 문에서 오류뜨는 상태! -->
	<!-- <select id="selectedRefundList" parameterType="Map" resultType="kr.happyjob.chainmaker.scm.model.RefundVO"> 
		select @rownum:=@rownum+1 as row_num ,ll.refund_no as refund_no ,ll.company_name 
		as company_name ,ll.pro_no as pro_no ,ll.pro_name as pro_name ,ll.refund_date 
		as refund_date ,ll.refund_qty as refund_qty ,ll.pro_price * ll.refund_qty 
		as total_price ,ll.purchase_no as purchase_no ,ll.order_no as order_no ,CASE 
		ll.order_no WHEN null THEN '납품업체' ELSE '기업고객' END as type_company ,ll.refund_note 
		as refund_note from ( Select r.refund_no as refund_no ,a4.user_company as 
		company_name ,a4.pro_no as pro_no ,a4.pro_name as pro_name ,r.refund_date 
		as refund_date ,r.refund_qty as refund_qty ,a4.pro_price as pro_price ,r.purchase_no 
		,r.order_no ,r.refund_note from tb_refund r join ( select u.user_company 
		as user_company ,u.div_cd as div_cd ,u.user_type as user_type ,p.pro_no as 
		pro_no ,p.pro_name as pro_name ,p.pro_price as pro_price ,p.pro_cd as pro_cd 
		from tb_order o join tb_product p on o.pro_no = p.pro_no join tb_userinfo 
		u on o.loginID = u.loginID and u.user_type = "C" where o.order_cd = 'refund' 
		) a4 on r.pro_no = a4.pro_no ) ll where (@rownum:=0)=0 limit 0,10 </select> -->


	<!-- 4. 검색하면 나오는 반품목록 갯수 - 이거 수정해야한다. 검색하면 나오는 것에 대해서만!!! -->
	<!-- <select id="selectedRefundCnt" parameterType="Map" resultType="int"> 
		select count(1) from tb_refund </select> -->












</mapper>