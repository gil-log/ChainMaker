<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.chainmaker.epc.dao.ProductListDAO">

	<!-- 그룹코드 목록 조회 -->
	<select id="listProductList" resultType="kr.happyjob.chainmaker.epc.model.ProductListModel">
		SELECT	TA.pro_no as pro_num	
			,	TB.detail_name as pro_cod
			,	TA.pro_model_name as pro_cod_nam
			,	TA.pro_manu_name as pro_manu_nm
			,	TA.pro_price as pro_prc
		FROM	tb_product TA 
		LEFT JOIN tb_detail_code TB
   		ON TA.pro_cd = TB.detail_code
		<where>
				<choose>
					<when
						test="(v != null) and (!v.equals(''))">
							and TB.detail_name = #{p}
							and TA.pro_manu_name = #{v}
							and (TA.pro_no Like CONCAT('%', #{sname}, '%')
							or TA.pro_model_name Like CONCAT('%', #{sname} , '%'))
					</when>
					
					<when
						test="(oname eq ''.toString()) and (sname != null)">
							
							and (TA.pro_no Like CONCAT('%', #{sname}, '%')
							or TA.pro_model_name Like CONCAT('%', #{sname} , '%'))
					</when>
					
				</choose>
			
		</where>
		
		LIMIT #{pageIndex}, #{pageSize}
		
	</select>
	

	
	<!-- 그룹코드 목록 총 갯수 조회 -->
	<select id="countListProductList" resultType="int">
		/*kr.kosmo.jobkorea.epc.dao.ProductListDAO.countListProductList*/
		SELECT COUNT(1) AS tot_cnt  FROM	tb_product TA 
									LEFT JOIN tb_detail_code TB
   									ON TA.pro_cd = TB.detail_code
		
		<where>
				<choose>
					<when
						test="(v != null) and (!v.equals(''))">
							and TB.detail_name = #{p}
							and TA.pro_manu_name = #{v}
							and (TA.pro_no Like CONCAT('%', #{sname}, '%')
							or TA.pro_model_name Like CONCAT('%', #{sname} , '%'))
					</when>
					
					<when
						test="(oname eq ''.toString()) and (sname != null)">
							
							and (TA.pro_no Like CONCAT('%', #{sname}, '%')
							or TA.pro_model_name Like CONCAT('%', #{sname} , '%'))
					</when>
					
				</choose>
			
		</where>
	</select>
	
		<!-- 동적 셀렉트 조회 -->
	<select id = "selectProduct" resultType = "kr.happyjob.chainmaker.epc.model.ProductDetailModel">
		<!--select pro_manu_name as pro_manu_nm 
			 , pro_cd 
			from tb_product
			
					<where>
					and pro_cd = #{p}
					
					</where>
						
				
			group by pro_manu_name	 -->
			
     	 select     TA.pro_manu_name as pro_manu_nm 
			      , TA.pro_cd
           		  , TB.detail_name
       		 
       		 from tb_product	TA
          	 LEFT JOIN tb_detail_code TB
             ON TA.pro_cd = TB.detail_code
            
             <where>
			  TB.detail_name = #{p}
			 </where>
			 			
	   		 group by pro_manu_name	
	
	</select>
	
	
		<!-- 동적 셀렉트  상품목록 -->
	<select id = "selectDetail" resultType = "kr.happyjob.chainmaker.epc.model.ProductDetailModel">
		select TA.pro_cd as pro_cod
			 , TB.detail_name as detail_name
			from tb_product TA
			LEFT JOIN tb_detail_code TB
			ON TA.pro_cd = TB.detail_code
			group by TB.detail_name	
     
	
	</select>
	
	
	<!-- 제품 1건 상세정보 -->
	<select id="selectProductDetail" parameterType="Map" resultType="kr.happyjob.chainmaker.epc.model.ProductListModel">

		 SELECT
				TA.pro_no as pro_num
			,	TA.pro_manu_name as pro_manu_nm
			,	TA.pro_price as pro_prc
		 	,	TA.pro_detail as pro_det
            , 	TB.file_server_path as file_server_path
		FROM tb_product TA
		LEFT JOIN tb_file TB
        ON TA.pro_no = TB.pro_no
        <where>
        and TA.pro_no = #{pro_num}
        </where>
        
		 
	</select>	
	
	
	<!-- 주문저장 -->
	<insert id="insertOrder">
		/*kr.kosmo.jobkorea.epc.dao.ProductListDAO.insertOrder*/
		INSERT INTO tb_order
		(
                      pro_no,
                      order_qty,
                      order_cd,
                      deposit_cd,
                      order_date,
                      order_expdate,
                      order_mod_date,
                      loginID)
		VALUES
		(
				#{pro_num}
			,	#{od_qty}
			,	"order"
			, 	0
			,	NOW()
			,	#{startDate}
			,	NOW()
			,	#{login_id}
		)
	</insert>
	
	<!-- 장바구니저장 -->
	<insert id="insertBasket">
		/*kr.kosmo.jobkorea.epc.dao.ProductListDAO.insertBasket*/
		INSERT INTO tb_basket 
					(  	 pro_no
					   , bas_date
                       , loginID
                       , bas_qty
                       )
                       
                       SELECT  #{pro_num}
                    		  ,	#{startDate}
                              , #{login_id}
                              , #{od_qty}
                             FROM DUAL 
                             WHERE NOT EXISTS (SELECT pro_no
					  								, bas_date
                       								, loginID
                       								, bas_qty
                       								FROM tb_basket
                       								WHERE pro_no = #{pro_num}
					  								AND bas_date = #{startDate}
                       								AND loginID = #{login_id}
                       									)				
	</insert>
	<select id="existBasket" parameterType="Map" resultType="int">
		select count(*) 
			from tb_basket
			where pro_no = #{pro_num} 
			and bas_date = #{startDate} 
			and loginID = #{login_id}; 
	
	
	</select>
	
	
	<!-- admin 계좌 가져오기 -->
	<select id="adminBank" resultType="kr.happyjob.chainmaker.epc.model.ProductListModel">
		SELECT u.user_account as user_account
			, d.detail_name as bank_name
			, u.name as name
            , (p.pro_price*#{od_qty}) as pro_prc
		FROM tb_userinfo u 
		JOIN tb_detail_code d 
        ON u.bank_cd = d.detail_code
        join tb_product p
		WHERE loginID = "admin"
        and p.pro_no = #{pro_num};
	</select>
	
</mapper>


