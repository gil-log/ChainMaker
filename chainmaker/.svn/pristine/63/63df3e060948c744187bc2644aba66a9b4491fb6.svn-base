<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.chainmaker.ged.dao.PalDao">

	<!-- 손익 조회 리스트 -->
	<select id="palList" resultType="kr.happyjob.chainmaker.ged.model.PalVO">
	SELECT company, SUM(profit) AS profit, SUM(loss) AS loss 
	FROM(
	SELECT ui.user_company AS company,
		sum((pc.pro_price - pc.pro_deli_price) * od.order_qty) AS profit,
		0 AS loss
	FROM tb_order od
	JOIN tb_product pc
	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "complete")
	LEFT JOIN tb_refund rd 
 	  ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) 
	<if test="(oname eq 'title'.toString())">
	 AND DATE(od.order_date) between #{from_date} and #{to_date}
 	 AND ui.user_company Like CONCAT('%', #{sname}, '%')
	</if>
	GROUP BY company
	UNION 
	SELECT ui.user_company AS company,
		0 AS profit,
		sum((pc.pro_price - pc.pro_deli_price) * rd.refund_qty) AS loss
	FROM tb_order od		 
	LEFT JOIN tb_product pc
 	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "refund")
	JOIN tb_refund rd 
	  ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no) AND (rd.refund_confirm_cd = 4)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) 
	<if test="(oname eq 'title'.toString())">
	 AND DATE(od.order_date) between #{from_date} and #{to_date}
 	 AND ui.user_company Like CONCAT('%', #{sname}, '%')
	</if>
	GROUP BY company)a
	GROUP BY company
	LIMIT #{pageIndex}, #{pageSize}
	</select>
	
	<!-- 손익 조회 상세 리스트 -->
	<select id="palDList" resultType="kr.happyjob.chainmaker.ged.model.PalVO">

	SELECT ui.user_company AS company,
		((pc.pro_price - pc.pro_deli_price) * od.order_qty) AS profit,
		0 AS loss,
		od.order_date
	FROM tb_order od
	JOIN tb_product pc
 	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "complete")
	LEFT JOIN tb_refund rd 
	  ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no)
	JOIN tb_userinfo ui
	  ON (ui.loginID = od.loginID) AND (ui.user_company = #{user_company})
	 AND DATE(od.order_date) between #{from_date} and #{to_date}
	UNION 
	SELECT ui.user_company AS company,
		0,
		((pc.pro_price - pc.pro_deli_price) * rd.refund_qty) AS loss,
		od.order_date
	FROM tb_order od		 
	LEFT JOIN tb_product pc
 	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "refund")
	JOIN tb_refund rd 
      ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no) AND (rd.refund_confirm_cd = 4)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) AND (ui.user_company = #{user_company})
	 AND DATE(od.order_date) between #{from_date} and #{to_date}
   	ORDER BY order_date DESC
  	LIMIT #{pageIndex}, #{pageSize}
	</select>
	
	<!-- 손익 조회 총글수 구하기 -->
	<select id="palTotalCnt" resultType="int">
	SELECT COUNT(*) AS total_cnt
	FROM (
	SELECT company, SUM(profit) AS profit, SUM(loss) AS loss 
	FROM(
	SELECT ui.user_company AS company,
		sum((pc.pro_price - pc.pro_deli_price) * od.order_qty) AS profit,
		0 AS loss		
	FROM tb_order od
	JOIN tb_product pc
	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "complete")
	left JOIN tb_refund rd 
 	  ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) 
  	<if test="(oname eq 'title'.toString())">
	 AND DATE(od.order_date) between #{from_date} and #{to_date}
 	 AND ui.user_company Like CONCAT('%', #{sname}, '%')
	</if>
	GROUP BY company
	UNION 
	SELECT ui.user_company AS company,
		0 AS profit,
		sum((pc.pro_price - pc.pro_deli_price) * rd.refund_qty) AS loss		
	FROM tb_order od		 
	left JOIN tb_product pc
 	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "refund")
	JOIN tb_refund rd 
 	  ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no) AND (rd.refund_confirm_cd = 4)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) 
 	<if test="(oname eq 'title'.toString())">
	 AND DATE(od.order_date) between #{from_date} and #{to_date}
 	 AND ui.user_company Like CONCAT('%', #{sname}, '%')
	</if>
	GROUP BY company)a
	)b
	</select>

	<!-- 손익 상세 조회 총글수 구하기 -->
	<select id="palDTotalCnt" resultType="int">
	SELECT COUNT(*) AS total_cnt
	FROM (
	SELECT ui.user_company AS company,
		((pc.pro_price - pc.pro_deli_price) * od.order_qty) AS profit,
		0 AS loss,
		od.order_date
	FROM tb_order od
	JOIN tb_product pc
 	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "complete")
	LEFT JOIN tb_refund rd 
 	  ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) AND (ui.user_company = #{user_company})
     AND DATE(od.order_date) between #{from_date} and #{to_date}
	UNION 
	SELECT ui.user_company AS company,
		0,
		((pc.pro_price - pc.pro_deli_price) * rd.refund_qty) AS loss,
		od.order_date
	FROM tb_order od		 
	LEFT JOIN tb_product pc
  	  ON (od.pro_no = pc.pro_no) AND (od.order_cd = "refund")
	JOIN tb_refund rd 
      ON (od.pro_no = rd.pro_no) AND (od.order_no = rd.order_no) AND (rd.refund_confirm_cd = 4)
	JOIN tb_userinfo ui
 	  ON (ui.loginID = od.loginID) AND (ui.user_company = #{user_company})
     AND DATE(od.order_date) between #{from_date} and #{to_date}
	)a
	</select>
</mapper>